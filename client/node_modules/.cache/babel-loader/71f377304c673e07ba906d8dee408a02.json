{"ast":null,"code":"var _jsxFileName = \"/home/adminpc/React/react-to-node/client/src/modules/LoginPage/index.js\";\nimport React, { useState } from 'react';\nimport './index.css'; //Default page unless correct data submitted\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends React.Component {\n  ////////////////////\n  constructor() {\n    super();\n    this.state = {\n      data: null\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/got');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      data: \"Waiting\",\n      auth: \"\"\n    };\n  } //const [data, setData] = useState(\"\");\n  ///////////////////\n\n\n  componentDidMount() {\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    document.body.style.backgroundColor = \"#fff\";\n\n    function handleClick() {\n      console.log(\"Working\");\n      fetch('/auth', {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=UTF-8\"\n        },\n        body: JSON.stringify({\n          message: \"password\"\n        })\n      }).then(res => res.json()).then(res => {\n        console.log(res.authenticated);\n        console.log(world);\n        return res.authenticated;\n      });\n    }\n\n    ;\n\n    function testing() {\n      setTimeout(() => {\n        console.log(\"hello world\");\n      }, 1000);\n      return 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Account Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"First Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"lastName\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Last Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"firstName\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              maxLength: \"8\",\n              id: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            onClick: () => {\n              handleClick();\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.auth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/adminpc/React/react-to-node/client/src/modules/LoginPage/index.js"],"names":["React","useState","LoginPage","Component","constructor","state","data","callBackendAPI","response","fetch","body","json","status","Error","message","auth","componentDidMount","then","res","setState","express","catch","err","console","log","render","document","style","backgroundColor","handleClick","method","mode","headers","JSON","stringify","authenticated","world","testing","setTimeout"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport './index.css';\n\n//Default page unless correct data submitted\nclass LoginPage extends React.Component {\n\n    state = {\n        data: null\n    };\n\n    ////////////////////\n    constructor() {\n        super();\n        this.state = {data: \"Waiting\", auth: \"\"};\n    }\n\n\n    //const [data, setData] = useState(\"\");\n\n    ///////////////////\n\n    componentDidMount() {\n        this.callBackendAPI()\n            .then(res => this.setState({ data: res.express }))\n            .catch(err => console.log(err));\n    }\n\n    callBackendAPI = async () => {\n        const response = await fetch('/got');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    render() {\n\n    document.body.style.backgroundColor = \"#fff\";\n        function handleClick(){\n            console.log(\"Working\");\n\n            fetch('/auth', {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\"Content-Type\": \"application/json; charset=UTF-8\" },\n                body: JSON.stringify({message: \"password\"})\n            })\n            .then(res => res.json())\n            .then((res) => {\n                console.log(res.authenticated); \n                console.log(world);\n                return res.authenticated;})\n        };\n\n        function testing(){\n            setTimeout(() => {\n                console.log(\"hello world\");\n            }, 1000)\n            return 0;\n        }\n\n        return (\n            <div className=\"login-box\">\n                <h1>Account Login</h1>\n                <div className=\"login-input\">\n                    <form>\n                        <label>\n                            First Name: <input type=\"text\" id=\"lastName\" required/>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Last Name: <input type=\"text\" id=\"firstName\" required/>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Password: <input type=\"password\" maxLength=\"8\" id=\"password\" required/>\n                        </label>\n                        <br /><br />\n                        <input type=\"submit\" value=\"Submit\" onClick={() => {handleClick()}} required/>\n                    </form>\n                    <p>{this.state.data}</p>\n                    <p>{this.state.auth}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}