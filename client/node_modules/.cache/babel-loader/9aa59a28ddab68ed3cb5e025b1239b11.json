{"ast":null,"code":"var _jsxFileName = \"/home/adminpc/React/react-to-node/client/src/modules/LoginPage/index.js\";\nimport React from 'react';\nimport './index.css'; //Default page unless correct data submitted\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmission = event => {\n      //event.preventDefault();\n      setTimeout(() => {\n        console.log(this.FN.current.value);\n        console.log(this.LN.current.value);\n        console.log(this.PW.current.value);\n      }, 2000);\n      this.handleClick();\n      return 0;\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/check');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      data: \"\",\n      auth: \"\",\n      firstName: \"\",\n      lastName: \"world\",\n      password: \"password\"\n    };\n    this.onSubmission = this.onSubmission.bind(this);\n    this.FN = /*#__PURE__*/React.createRef();\n    this.LN = /*#__PURE__*/React.createRef();\n    this.PW = /*#__PURE__*/React.createRef();\n  }\n\n  /*  function testing(){\n          setTimeout(() => {\n              console.log(\"hello world\");\n          }, 1000)\n          return 0;\n      } */\n  serverCheck() {\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  }\n\n  handleClick() {\n    fetch('/api', {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify({\n        message: this.state.password,\n        fName: this.state.firstName,\n        lName: this.state.lastName\n      })\n    }).then(res => res.json()).then(res => {\n      console.log(res.authenticated);\n      this.setState({\n        auth: res.authenticated\n      });\n      return res.authenticated;\n    });\n  }\n\n  //onClick={() => {this.handleClick();}}\n\n  /*                         <label>\n                              Last Name: <input type=\"text\"  required/>\n                          </label>\n                          <br /><br />\n                          <label>\n                              Password: <input type=\"password\" maxLength=\"8\"  required/>\n                          </label>\n                          <br /><br />\n   */\n  //onClick={() => {this.handleClick();}}\n  render() {\n    document.body.style.backgroundColor = \"#fff\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Account Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmission,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"First Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: \"A\",\n              ref: this.FN,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Last Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: \"B\",\n              ref: this.LN,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              maxLength: \"8\",\n              defaultValue: \"C\",\n              ref: this.PW,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.serverCheck();\n          },\n          children: \"Check Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.data, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/adminpc/React/react-to-node/client/src/modules/LoginPage/index.js"],"names":["React","LoginPage","Component","constructor","props","onSubmission","event","setTimeout","console","log","FN","current","value","LN","PW","handleClick","callBackendAPI","response","fetch","body","json","status","Error","message","state","data","auth","firstName","lastName","password","bind","createRef","serverCheck","then","res","setState","express","catch","err","method","mode","headers","JSON","stringify","fName","lName","authenticated","render","document","style","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './index.css';\n\n//Default page unless correct data submitted\nclass LoginPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: \"\",\n            auth: \"\",\n            firstName: \"\",\n            lastName: \"world\",\n            password:\"password\"\n        };\n        this.onSubmission = this.onSubmission.bind(this);\n        this.FN = React.createRef();\n        this.LN = React.createRef();\n        this.PW = React.createRef();\n    }\n\n    onSubmission = (event) => {\n        //event.preventDefault();\n        setTimeout (() => {\n        console.log(this.FN.current.value);\n        console.log(this.LN.current.value);\n        console.log(this.PW.current.value);\n\n        }, 2000);\n        \n        this.handleClick();\n        return 0;\n    }\n\n\n/*  function testing(){\n        setTimeout(() => {\n            console.log(\"hello world\");\n        }, 1000)\n        return 0;\n    } */\n\n    serverCheck() {\n        this.callBackendAPI()\n            .then(res => this.setState({ data: res.express }))\n            .catch(err => console.log(err));\n    }\n\n    callBackendAPI = async () => {\n        const response = await fetch('/check');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n\n    handleClick() {\n\n        fetch('/api', {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\"Content-Type\": \"application/json; charset=UTF-8\" },\n            body: JSON.stringify({message: this.state.password, fName: this.state.firstName, lName: this.state.lastName})\n        })\n        .then(res => res.json())\n        .then((res) => {\n            console.log(res.authenticated); \n            this.setState({auth: res.authenticated});\n            return res.authenticated;\n        })\n    };\n\n//onClick={() => {this.handleClick();}}\n\n\n/*                         <label>\n                            Last Name: <input type=\"text\"  required/>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Password: <input type=\"password\" maxLength=\"8\"  required/>\n                        </label>\n                        <br /><br />\n */\n\n                        //onClick={() => {this.handleClick();}}\n\n    render() {\n\n    document.body.style.backgroundColor = \"#fff\";\n\n        return (\n            <div className=\"login-box\">\n                <h1>Account Login</h1>\n                <div className=\"login-input\">\n                    <form onSubmit={this.onSubmission}>\n                        <label>\n                            First Name: <input type=\"text\" defaultValue={\"A\"} ref={this.FN} required/>\n                        </label>\n                        <br /><br />\n\n                        <label>\n                            Last Name: <input type=\"text\" defaultValue={\"B\"} ref={this.LN} required/>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Password: <input type=\"password\" maxLength=\"8\" defaultValue={\"C\"} ref={this.PW} required/>\n                        </label>\n                        <br /><br />\n\n\n\n\n                        <input type=\"submit\" value=\"Submit\"  required/>\n                    </form>\n                    \n                    <button onClick = {() => {this.serverCheck();}}> \n                        Check Server\n                    </button>\n                    <p>{this.state.data} </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}