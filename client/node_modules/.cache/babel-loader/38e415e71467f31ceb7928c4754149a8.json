{"ast":null,"code":"var _jsxFileName = \"/home/adminpc/React/react-to-node/client/src/modules/LoginPage/index.js\";\nimport React from 'react';\nimport './index.css'; //Default page unless correct data submitted\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmission = event => {\n      console.log(this.FN.current.value);\n      console.log(this.LN.current.value);\n      console.log(this.PW.current.value);\n      this.handleClick();\n      return 0;\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/check');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      data: \"\",\n      auth: \"\",\n      firstName: \"\",\n      lastName: \"world\",\n      password: \"password\"\n    };\n    this.onSubmission = this.onSubmission.bind(this);\n    this.FN = /*#__PURE__*/React.createRef();\n    this.LN = /*#__PURE__*/React.createRef();\n    this.PW = /*#__PURE__*/React.createRef();\n  }\n\n  serverCheck() {\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  }\n\n  handleClick() {\n    console.log(\"Running handleClick function\");\n    fetch('/api', {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      },\n      //body: JSON.stringify({message: this.state.password, fName: this.state.firstName, lName: this.state.lastName})\n      body: JSON.stringify({\n        message: this.PW.current.value,\n        fName: this.FN.current.value,\n        lName: this.LN.current.value\n      })\n    }).then(res => res.json()).then(res => {\n      console.log(\"Posted\");\n      console.log(res.authenticated);\n      this.setState({\n        auth: res.authenticated\n      });\n      console.log(\"Signed in as: \" + this.FN.current.value);\n      return res.authenticated;\n    });\n  }\n\n  render() {\n    document.body.style.backgroundColor = \"#fff\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Account Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"First Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: this.FN,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Last Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: this.LN,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            maxLength: \"8\",\n            ref: this.PW,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: () => {\n            this.handleClick();\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.serverCheck();\n          },\n          children: \"Check Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.data, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/adminpc/React/react-to-node/client/src/modules/LoginPage/index.js"],"names":["React","LoginPage","Component","constructor","props","onSubmission","event","console","log","FN","current","value","LN","PW","handleClick","callBackendAPI","response","fetch","body","json","status","Error","message","state","data","auth","firstName","lastName","password","bind","createRef","serverCheck","then","res","setState","express","catch","err","method","mode","headers","JSON","stringify","fName","lName","authenticated","render","document","style","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './index.css';\n\n//Default page unless correct data submitted\nclass LoginPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: \"\",\n            auth: \"\",\n            firstName: \"\",\n            lastName: \"world\",\n            password:\"password\"\n        };\n        this.onSubmission = this.onSubmission.bind(this);\n        this.FN = React.createRef();\n        this.LN = React.createRef();\n        this.PW = React.createRef();\n    }\n\n    onSubmission = (event) => {\n        console.log(this.FN.current.value);\n        console.log(this.LN.current.value);\n        console.log(this.PW.current.value);\n\n        this.handleClick();\n\n        return 0;\n    }\n\n\n    serverCheck() {\n        this.callBackendAPI()\n            .then(res => this.setState({ data: res.express }))\n            .catch(err => console.log(err));\n    }\n\n    callBackendAPI = async () => {\n        const response = await fetch('/check');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n\n    handleClick() {\n\n        console.log(\"Running handleClick function\");\n\n        fetch('/api', {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\"Content-Type\": \"application/json; charset=UTF-8\" },\n            //body: JSON.stringify({message: this.state.password, fName: this.state.firstName, lName: this.state.lastName})\n            body: JSON.stringify({message: this.PW.current.value, fName: this.FN.current.value, lName: this.LN.current.value})\n        })\n        .then(res => res.json())\n        .then((res) => {\n            console.log(\"Posted\");\n            console.log(res.authenticated); \n            this.setState({auth: res.authenticated});\n            console.log(\"Signed in as: \" + this.FN.current.value)\n            return res.authenticated;\n        })\n    };\n\n    render() {\n\n    document.body.style.backgroundColor = \"#fff\";\n\n        return (\n            <div className=\"login-box\">\n                <h1>Account Login</h1>\n                <div className=\"login-input\">\n                    \n                        <label>\n                            First Name: <input type=\"text\" ref={this.FN} required/>\n                        </label>\n                        <br /><br />\n\n                        <label>\n                            Last Name: <input type=\"text\" ref={this.LN} required/>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Password: <input type=\"password\" maxLength=\"8\" ref={this.PW} required/>\n                        </label>\n                        <br /><br />\n\n                        <input type=\"submit\" value=\"Submit\" onClick={() => {this.handleClick();}} required/>\n                    \n                    \n                    <button onClick = {() => {this.serverCheck();}}> \n                        Check Server\n                    </button>\n                    <p>{this.state.data} </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}