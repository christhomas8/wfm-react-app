{"ast":null,"code":"var _jsxFileName = \"/home/adminpc/React/react-to-node/client/src/modules/LoginPage/index.js\";\nimport React from 'react';\nimport App from './';\nimport './index.css'; //Default page unless correct data submitted\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmission = event => {\n      //console.log(this.FN.current.value); //first name input reference\n      //console.log(this.LN.current.value); //last name input reference\n      //console.log(this.PW.current.value); //password input reference\n      //this.handleClick();\n      return 0;\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/check');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      data: \"\",\n      auth: \"\",\n      //used to toggle displays depending on state\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\"\n    };\n    this.onSubmission = this.onSubmission.bind(this);\n    this.FN = /*#__PURE__*/React.createRef();\n    this.LN = /*#__PURE__*/React.createRef();\n    this.PW = /*#__PURE__*/React.createRef(); /////////////////////////////////////\n\n    this.getData = this.getData.bind(this); /////////////////////////////////////\n  }\n\n  demoMethod() {\n    this.props.sendData(value);\n  }\n\n  serverCheck() {\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  }\n\n  handleClick() {\n    fetch('/api', {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      },\n      //body: JSON.stringify({message: this.state.password, fName: this.state.firstName, lName: this.state.lastName})\n      body: JSON.stringify({\n        message: this.PW.current.value,\n        fName: this.FN.current.value,\n        lName: this.LN.current.value\n      })\n    }).then(res => res.json()).then(res => {\n      console.log(res.authenticated);\n      this.setState({\n        auth: res.authenticated\n      });\n\n      if (this.state.auth) {\n        console.log(\"Signed in as: \" + this.FN.current.value);\n      }\n\n      return res.authenticated;\n    });\n  }\n\n  render() {\n    document.body.style.backgroundColor = \"#fff\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Account Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"First Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: this.FN,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Last Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: this.LN,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              maxLength: \"8\",\n              ref: this.PW,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            onClick: () => {\n              this.handleClick();\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.serverCheck();\n            },\n            children: \"Check Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [this.state.data, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/adminpc/React/react-to-node/client/src/modules/LoginPage/index.js"],"names":["React","App","LoginPage","Component","constructor","props","onSubmission","event","callBackendAPI","response","fetch","body","json","status","Error","message","state","data","auth","firstName","lastName","password","bind","FN","createRef","LN","PW","getData","demoMethod","sendData","value","serverCheck","then","res","setState","express","catch","err","console","log","handleClick","method","mode","headers","JSON","stringify","current","fName","lName","authenticated","render","document","style","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport App from './';\nimport './index.css';\n\n//Default page unless correct data submitted\nclass LoginPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: \"\", \n            auth: \"\", //used to toggle displays depending on state\n            firstName: \"\",\n            lastName: \"\",\n            password:\"\"\n        };\n        this.onSubmission = this.onSubmission.bind(this);\n        this.FN = React.createRef();\n        this.LN = React.createRef();\n        this.PW = React.createRef();\n\n        /////////////////////////////////////\n        this.getData = this.getData.bind(this);\n        /////////////////////////////////////\n    }\n\n    onSubmission = (event) => {\n        //console.log(this.FN.current.value); //first name input reference\n        //console.log(this.LN.current.value); //last name input reference\n        //console.log(this.PW.current.value); //password input reference\n\n        //this.handleClick();\n\n        return 0;\n    }\n\n    demoMethod(){\n        this.props.sendData(value);\n      }\n\n    serverCheck() {\n        this.callBackendAPI()\n            .then(res => this.setState({ data: res.express }))\n            .catch(err => console.log(err));\n    }\n\n    callBackendAPI = async () => {\n        const response = await fetch('/check');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    handleClick() {\n\n        fetch('/api', {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\"Content-Type\": \"application/json; charset=UTF-8\" },\n            //body: JSON.stringify({message: this.state.password, fName: this.state.firstName, lName: this.state.lastName})\n            body: JSON.stringify({message: this.PW.current.value, fName: this.FN.current.value, lName: this.LN.current.value})\n        })\n        .then(res => res.json())\n        .then((res) => {\n            console.log(res.authenticated); \n            this.setState({auth: res.authenticated});\n            if (this.state.auth ){\n                console.log(\"Signed in as: \" + this.FN.current.value);\n            }\n            return res.authenticated;\n        })\n    };\n\n    render() {\n\n    document.body.style.backgroundColor = \"#fff\";\n\n        return (\n            <div>\n                <div className=\"login-box\">\n                    <h1>Account Login</h1>\n                <div className=\"login-input\">\n                                        \n                        <label>\n                            First Name: <input type=\"text\" ref={this.FN} required/>\n                        </label>\n                        <br /><br />\n\n                        <label>\n                            Last Name: <input type=\"text\" ref={this.LN} required/>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Password: <input type=\"password\" maxLength=\"8\" ref={this.PW} required/>\n                        </label>\n                        <br /><br />\n\n                        <input type=\"submit\" value=\"Submit\" onClick={() => {this.handleClick();}} required/>\n                    \n                    \n                    <button onClick = {() => {this.serverCheck();}}> \n                        Check Server\n                    </button>\n                    <p>{this.state.data} </p>\n                </div>\n                \n            </div>\n\n            </div>\n            \n        );\n    }\n}\n\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}