{"ast":null,"code":"var _jsxFileName = \"/home/adminpc/React/react-to-node/client/src/modules/LoginPage/index.js\";\nimport React from 'react';\nimport './index.css'; //Default page unless correct data submitted\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends React.Component {\n  //state = {\n  //    data: null\n  //};\n  ////////////////////\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/got');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      data: \"Waiting\",\n      auth: \"\"\n    };\n  } //const [data, setData] = useState(\"\");\n  ///////////////////\n\n  /*      function testing(){\n              setTimeout(() => {\n                  console.log(\"hello world\");\n              }, 1000)\n              return 0;\n          } */\n  //called after the component is rendered\n  //componentDidMount() {\n  //    this.callBackendAPI()\n  //        .then(res => this.setState({ data: res.express }))\n  //       .catch(err => console.log(err));\n  //}\n\n\n  handleClick(e) {\n    e.preventDefault();\n    console.log(\"Working\");\n    fetch('/auth', {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify({\n        message: \"password\"\n      })\n    }).then(res => res.json()).then(res => {\n      console.log(res.authenticated);\n      return res.authenticated;\n    });\n  }\n\n  render() {\n    document.body.style.backgroundColor = \"#fff\";\n    /*\n    function handleClick(){\n        console.log(\"Working\");\n         fetch('/auth', {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\"Content-Type\": \"application/json; charset=UTF-8\" },\n            body: JSON.stringify({message: \"password\"})\n        })\n        .then(res => res.json())\n        .then((res) => {\n            console.log(res.authenticated); \n            return res.authenticated;})\n    };\n     */\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Account Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"First Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"lastName\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Last Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"firstName\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              maxLength: \"8\",\n              id: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            onClick: () => {\n              handleClick();\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.auth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.callBackendAPI().then(res => this.setState({\n              data: res.express\n            })).catch(err => console.log(err));\n          },\n          children: \"Check Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/adminpc/React/react-to-node/client/src/modules/LoginPage/index.js"],"names":["React","LoginPage","Component","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","state","data","auth","handleClick","e","preventDefault","console","log","method","mode","headers","JSON","stringify","then","res","authenticated","render","document","style","backgroundColor","setState","express","catch","err"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './index.css';\n\n//Default page unless correct data submitted\nclass LoginPage extends React.Component {\n\n    //state = {\n    //    data: null\n    //};\n\n    ////////////////////\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: \"Waiting\",\n            auth: \"\"\n        };\n\n    }\n    //const [data, setData] = useState(\"\");\n\n    ///////////////////\n\n\n/*      function testing(){\n            setTimeout(() => {\n                console.log(\"hello world\");\n            }, 1000)\n            return 0;\n        } */\n\n    //called after the component is rendered\n    //componentDidMount() {\n    //    this.callBackendAPI()\n    //        .then(res => this.setState({ data: res.express }))\n    //       .catch(err => console.log(err));\n    //}\n\n    callBackendAPI = async () => {\n        const response = await fetch('/got');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n\n    handleClick(e){\n        e.preventDefault();\n        console.log(\"Working\");\n\n        fetch('/auth', {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\"Content-Type\": \"application/json; charset=UTF-8\" },\n            body: JSON.stringify({message: \"password\"})\n        })\n        .then(res => res.json())\n        .then((res) => {\n            console.log(res.authenticated); \n            return res.authenticated;})\n    };\n\n\n\n\n    render() {\n\n    document.body.style.backgroundColor = \"#fff\";\n        \n        /*\n        function handleClick(){\n            console.log(\"Working\");\n\n            fetch('/auth', {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\"Content-Type\": \"application/json; charset=UTF-8\" },\n                body: JSON.stringify({message: \"password\"})\n            })\n            .then(res => res.json())\n            .then((res) => {\n                console.log(res.authenticated); \n                return res.authenticated;})\n        };\n\n        */\n\n\n        return (\n            <div className=\"login-box\">\n                <h1>Account Login</h1>\n                <div className=\"login-input\">\n                    <form>\n                        <label>\n                            First Name: <input type=\"text\" id=\"lastName\" required/>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Last Name: <input type=\"text\" id=\"firstName\" required/>\n                        </label>\n                        <br /><br />\n                        <label>\n                            Password: <input type=\"password\" maxLength=\"8\" id=\"password\" required/>\n                        </label>\n                        <br /><br />\n                        <input type=\"submit\" value=\"Submit\" onClick={() => {handleClick();}} required/>\n                    </form>\n                    <p>{this.state.data}</p>\n                    <p>{this.state.auth}</p>\n                    <button onClick = {() => { \n                        this.callBackendAPI()\n                        .then(res => this.setState({ data: res.express }))\n                        .catch(err => console.log(err));}} >\n                            Check Server\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}